#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================
# This is free software, lisence use MIT.
# 
# Copyright (C) 2020 vipassana <https://tiantianxiaoxiao.xyz>
# 
# <https://github.com/tiantianxiaoxiaoxyz/AutoBuild-Nanopi-R2S/>
#
# Write by vipassana 2020/2/10
# last update at 2020/2/19
#=================================================

name: Build Openwrt for NanoPi R2S

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
      - 'nanopi_r2s.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]
#
    
#环境变量：SSH_ACTIONS设置为true则会在执行完Costom Configure File后显示一个SSH的链接，可用终端或者web登录到vps进行配置
env:
  SSH_ACTIONS: false
  TZ: Asia/Shanghai

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          #以下这段命令是删除vps上的无用文件和软件，腾出空间供编译使用（初始可使用的空间为30G可能不够）
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
          #安装编译所需要的软件，安装rk3328的编译环境
          sudo -E apt-get update
          sudo -E apt-get -y install bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      #同步rk3328的源码    
      - name: Download Source
        run: |
          mkdir friendlywrt-rk3328
          cd friendlywrt-rk3328
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c --no-clone-bundle
          
        #下载lean大源码，复制lean文件夹到rk3328下，修改feeds.conf.defaul的源     
      - name: Merge LEDE
        run: |
          cd friendlywrt-rk3328
          git clone https://github.com/coolsnowwolf/lede
          cd friendlywrt
          cp -r ../lede/package/lean package/
          sed -i 's/https:\/\/github.com\/friendlyarm\/friendlywrt_project_luci^bb021b4b9097ad332ab40bce2a1c239d9fcf225b/https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          sed -i 's/https:\/\/git.openwrt.org\/feed\/packages.git^54266c99b2a2e37a4c01b02ae74346874db7003c/https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default              
      
      - name: Update Target.mk
        run: |
          cd friendlywrt-rk3328/friendlywrt/include 
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk  
      
      - name: Update Feeds
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      #复制本项目根目录下的.config文件（可上传替换为自己的文件）到friendlywrt-rk3328/friendlywrt/下
      #make defconfig 的意思是把.config你没写的部分用默认值补全，无效值全部删掉 
      - name: Costom Configure File
        env:
          CONFIG_FILE: 'my_config'
          CONFIG_FILE_FULL: 'nanopi_r2s.config'
        run: |
          [ -e $CONFIG_FILE_FULL ] && mv $CONFIG_FILE_FULL friendlywrt-rk3328/friendlywrt/.config
          cd friendlywrt-rk3328/friendlywrt
          make defconfig
#          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE friendlywrt-rk3328/configs
#          cd friendlywrt-rk3328/device/friendlyelec/rk3328
#          sed -i 's/TARGET_FRIENDLYWRT_CONFIG=config_rk3328/TARGET_FRIENDLYWRT_CONFIG=$CONFIG_FILE/' nanopi_r2s.mk

      #如果环境变量设置为true,执行到此步骤时会弹出几行信息，上面有ssh的命令和https的链接，可选择在终端通过ssh链接修改配置或者通过web连接修改
      - name: SSH connection to Actions
        uses: P3TERX/debugger-action@master
        if: env.SSH_ACTIONS == 'true'

      #下载预编译文件
      - name: Download package
        if: always()
        run: |
          cd friendlywrt-rk3328/friendlywrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      #开始编译固件
      - name: Build OpenWrt
        run: |
          cd friendlywrt-rk3328
          ./build.sh nanopi_r2s.mk
      
      - name: Zip Files
        run: |
          find friendlywrt-rk3328/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-rk3328/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/
          
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R2S RK3328
          path: ./artifact/
